// Project 5 - Controlling Traffic
// Defines the pins that the buttons and lights are connected to.
// modded by Jared Malecek

#define walkButton 6          // defines the pins
#define westButton 3
#define eastButton 2
#define walk 12
#define dontWalk 11
#define westRed 22
#define westYellow 24
#define westGreen 26
#define eastRed 30
#define eastYellow 32
#define eastGreen 34
#define yellowBlinkTime 500   // half a second for yellow light blink

boolean trafficWest = true;   // west = true, east = false
int flowTime  = 5000;         // amount of time to let traffic flow 
int changeDelay = 1000;       // amount of time between color changes
int walkTime = 2000;

void setup() {
  Serial.begin(9600);
  pinMode(westButton, INPUT);             // setup digital I/O pins
  pinMode(eastButton, INPUT);
  pinMode(walkButton, INPUT);
  pinMode(westRed, OUTPUT);
  pinMode(westYellow, OUTPUT);
  pinMode(westGreen, OUTPUT);
  pinMode(eastRed, OUTPUT);
  pinMode(eastYellow, OUTPUT);
  pinMode(eastGreen, OUTPUT);

  digitalWrite(westRed, LOW);             // set initial state for lights
  digitalWrite(westYellow, LOW);
  digitalWrite(westGreen, HIGH);
  digitalWrite(eastRed, HIGH);
  digitalWrite(eastYellow, LOW);
  digitalWrite(eastGreen, LOW);
  digitalWrite(walk, LOW);
  digitalWrite(dontWalk, HIGH);
}

void loop()
{
  if ( digitalRead(walkButton) == HIGH ) {   // the cross wall feature 
    if ( trafficWest != true ) {
      digitalWrite(eastGreen, LOW);          // change lights from green to yellow to red
      digitalWrite(eastYellow, HIGH);
      delay(changeDelay);
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, HIGH);

      delay(flowTime);                       //walk sign on then off
      digitalWrite(dontWalk, LOW);
      digitalWrite(walk, HIGH);
      Serial.println("Walk");
      delay(walkTime);
      Serial.println("Don't Walk");
      digitalWrite(walk, LOW);
      digitalWrite(dontWalk, HIGH);

      digitalWrite(westRed, HIGH);
      delay(changeDelay);
      for ( int i = 0; i < 5; i++ )        // blink yellow light
      {
        digitalWrite(eastYellow, LOW);
        delay(yellowBlinkTime);
        digitalWrite(eastYellow, HIGH);
        delay(yellowBlinkTime);
      }
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, LOW);          // change west-facing lights from red to green
      digitalWrite(eastGreen, HIGH);
    }
    if (trafficWest == true  ) {
      digitalWrite(westGreen, LOW);        // change lights from green to yellow to red
      digitalWrite(westYellow, HIGH);
      delay(changeDelay);
      digitalWrite(westYellow, LOW);
      digitalWrite(westRed, HIGH);

      delay(flowTime);                     //walk sign on then off
      digitalWrite(dontWalk, LOW);
      digitalWrite(walk, HIGH);
      Serial.println("Walk");
      delay(walkTime);
      Serial.println("Don't Walk");
      digitalWrite(walk, LOW);
      digitalWrite(dontWalk, HIGH);

      digitalWrite(eastRed, HIGH);
      delay(changeDelay);
      for ( int i = 0 ; i < 5 ; i++ )      // blink yellow light
      {
        digitalWrite(westYellow, LOW);
        delay(yellowBlinkTime);
        digitalWrite(westYellow, HIGH);
        delay(yellowBlinkTime);
      }
      digitalWrite(westYellow, LOW);
      digitalWrite(westRed, LOW);          // change east-facing lights from red to green
      digitalWrite(westGreen, HIGH);
    }
  }
  if ( digitalRead(westButton) == HIGH )  // request west>east traffic flow
  {
    if ( trafficWest != true )            // only continue if traffic flowing in the opposite (east) direction
    {
      trafficWest = true;                 // change traffic flow flag to west>east
      delay(flowTime);                    // give time for traffic to flow
      digitalWrite(eastGreen, LOW);       // change east-facing lights from green to yellow to red
      digitalWrite(eastYellow, HIGH);
      delay(changeDelay);
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, HIGH);
      delay(changeDelay);
      for ( int i = 0; i < 5; i++ )        // blink yellow light
      {
        digitalWrite(westYellow, LOW);
        delay(yellowBlinkTime);
        digitalWrite(westYellow, HIGH);
        delay(yellowBlinkTime);
      }
      digitalWrite(westYellow, LOW);
      digitalWrite(westRed, LOW);          // change west-facing lights from red to green
      digitalWrite(westGreen, HIGH);
    }
  }
  if ( digitalRead(eastButton) == HIGH )   // request east>west traffic flow
  {
    if ( trafficWest == true )             // only continue if traffic flow is in the opposite (west) direction
    {
      trafficWest = false;                 // change traffic flow flag to east>west
      delay(flowTime);                     // give time for traffic to flow
      digitalWrite(westGreen, LOW);        // change west lights from green to yellow to red
      digitalWrite(westYellow, HIGH);
      delay(changeDelay);
      digitalWrite(westYellow, LOW);
      digitalWrite(westRed, HIGH);
      delay(changeDelay);
      for ( int a = 0 ; a < 5 ; a++ )      // blink yellow light
      {
        digitalWrite(eastYellow, LOW);
        delay(yellowBlinkTime);
        digitalWrite(eastYellow, HIGH);
        delay(yellowBlinkTime);
      }
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, LOW);          // change east-facing lights from red to green
      digitalWrite(eastGreen, HIGH);
    }
  }
}
